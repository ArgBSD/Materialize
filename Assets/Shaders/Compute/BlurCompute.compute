#pragma kernel CSBlur

RWTexture2D<float4> Result;
Texture2D<float4> ImageInput;
SamplerState LinearRepeatSample;

int _Desaturate;
float2 _ImageSize;

float4 _BlurDirection;
int _BlurSamples;
float _BlurSpread;
float _BlurContrast;

[numthreads(8,8,1)]
void CSBlur (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= uint(_ImageSize.x) || id.y >= uint(_ImageSize.y))
        return;
        
    float2 pixelSize = ( 1.0 / _ImageSize.xy );

    float totalSamples = _BlurSamples * 2 + 0.000000000000000001; // Be sure to dont be zero
    int i;
    half4 mainTex = float4(0,0,0,0);
    for( i = -_BlurSamples; i <= _BlurSamples; i++ ){

        float weight = cos( ( float( i ) / float( totalSamples ) ) * 6.28318530718 ) * 0.5 + 0.5;
        float2 uv = id.xy / _ImageSize;
        half4 sampleTex = ImageInput.SampleLevel(LinearRepeatSample, uv + pixelSize.xy * _BlurDirection.xy * i * _BlurSpread, 0);
        if( _Desaturate > 0 ){
            sampleTex.xyz = sampleTex.x * 0.3 + sampleTex.y * 0.5 + sampleTex.z * 0.2;
        }
        sampleTex = half4( sampleTex.xyz * weight, weight );
        mainTex += sampleTex;
    }
    
    mainTex.xyz *= 1.0 / mainTex.w;
    //mainTex.xyz = FastSRGBToLinear(mainTex.xyz);
    mainTex.xyz = saturate( ( ( mainTex.xyz - 0.5 ) * _BlurContrast ) + 0.5 );

    Result[id.xy] = float4(mainTex.xyz, 1.0);
}
